// This file is @generated by prost-build.
#[derive(Clone, PartialEq, ::prost::Message)]
pub struct EncodedBlock {
    #[prost(bytes = "bytes", tag = "1")]
    pub block: ::prost::bytes::Bytes,
}
/// Get a single block
#[derive(Clone, Copy, PartialEq, ::prost::Message)]
pub struct GetBlockRequest {
    #[prost(uint64, tag = "1")]
    pub block_height: u64,
}
#[derive(Clone, PartialEq, ::prost::Message)]
pub struct GetBlockResponse {
    #[prost(message, optional, tag = "1")]
    pub block: ::core::option::Option<EncodedBlock>,
}
/// Iter many blocks
#[derive(Clone, Copy, PartialEq, ::prost::Message)]
pub struct IterBlocksRequest {
    #[prost(uint64, tag = "1")]
    pub start: u64,
    #[prost(uint64, tag = "2")]
    pub length: u64,
}
#[derive(Clone, PartialEq, ::prost::Message)]
pub struct IterBlocksResponse {
    #[prost(message, repeated, tag = "1")]
    pub blocks: ::prost::alloc::vec::Vec<EncodedBlock>,
}
/// Get many blocks
#[derive(Clone, Copy, PartialEq, ::prost::Message)]
pub struct GetBlocksRequest {
    #[prost(uint64, tag = "1")]
    pub start: u64,
    #[prost(uint64, tag = "2")]
    pub length: u64,
}
#[derive(Clone, PartialEq, ::prost::Message)]
pub struct EncodedBlocks {
    #[prost(message, repeated, tag = "1")]
    pub blocks: ::prost::alloc::vec::Vec<EncodedBlock>,
}
#[derive(Clone, PartialEq, ::prost::Message)]
pub struct GetBlocksResponse {
    #[prost(oneof = "get_blocks_response::GetBlocksContent", tags = "1, 2")]
    pub get_blocks_content: ::core::option::Option<
        get_blocks_response::GetBlocksContent,
    >,
}
/// Nested message and enum types in `GetBlocksResponse`.
pub mod get_blocks_response {
    #[non_exhaustive]
    #[derive(Clone, PartialEq, ::prost::Oneof)]
    pub enum GetBlocksContent {
        #[prost(message, tag = "1")]
        Blocks(super::EncodedBlocks),
        #[prost(string, tag = "2")]
        Error(::prost::alloc::string::String),
    }
}
